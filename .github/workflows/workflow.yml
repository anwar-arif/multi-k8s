name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: build docker image
        run: |
          docker build -t anr35/react-test -f ./client/Dockerfile.dev ./client
      - name: run tests for react app
        run: |
          docker run -e CI=true anr35/react-test npm test -- --coverage
  upload_image:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: build images
        run: |
          docker build -t anr35/multi-client ./client
          docker build -t anr35/multi-server ./server
          docker build -t anr35/multi-worker ./worker
      - name: docker login
        env:
          DOCKER_USER: ${{secrets.DOCKER_ID}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USER --password-stdin
      - name: push to docker hub
        run: |
          docker push anr35/multi-client
          docker push anr35/multi-server
          docker push anr35/multi-worker
  deploy:
    needs: upload_image
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      
      - name: setup gcloud CLI
        uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT_ID }}
      
      - name: configure docker to use gcloud CLI as credential helper for authentication
        run: |
          gcloud --quiet auth configure-docker
      
      - name: get GKE credentials
        uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER }}
          location: ${{ secrets.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      - name: deploy to GKE cluster
        run: |
          kubectl apply -f k8s
      
